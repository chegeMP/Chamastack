"""Add closes_at to Vote

Revision ID: 4dd2abc5420e
Revises: 
Create Date: 2025-08-05 15:13:04.067518

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4dd2abc5420e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('chama', schema=None) as batch_op:
        batch_op.alter_column('join_code',
               existing_type=sa.VARCHAR(length=8),
               type_=sa.String(length=10),
               existing_nullable=False)
        batch_op.alter_column('contribution_frequency',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)

    with op.batch_alter_table('contribution', schema=None) as batch_op:
        batch_op.alter_column('payment_method',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.alter_column('transaction_ref',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=True)

    with op.batch_alter_table('expense', schema=None) as batch_op:
        batch_op.add_column(sa.Column('title', sa.String(length=100), nullable=False))
        batch_op.alter_column('description',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.Text(),
               nullable=True)
        batch_op.drop_constraint(batch_op.f('expense_approved_by_fkey'), type_='foreignkey')
        batch_op.drop_column('category')
        batch_op.drop_column('approved_by')

    with op.batch_alter_table('goal', schema=None) as batch_op:
        batch_op.drop_column('target_date')
        batch_op.drop_column('current_amount')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('phone_number',
               existing_type=sa.VARCHAR(length=15),
               type_=sa.String(length=20),
               existing_nullable=False)
        batch_op.drop_column('created_at')

    with op.batch_alter_table('vote', schema=None) as batch_op:
        batch_op.add_column(sa.Column('closes_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('vote_type', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('minimum_approval', sa.Integer(), nullable=True))
        batch_op.alter_column('created_by',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('expires_at')

    with op.batch_alter_table('vote_option', schema=None) as batch_op:
        batch_op.alter_column('option_text',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.drop_column('votes_count')

    with op.batch_alter_table('vote_response', schema=None) as batch_op:
        batch_op.add_column(sa.Column('percentage', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('responded_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('option_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('voted_at')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('vote_response', schema=None) as batch_op:
        batch_op.add_column(sa.Column('voted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.alter_column('option_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('responded_at')
        batch_op.drop_column('percentage')

    with op.batch_alter_table('vote_option', schema=None) as batch_op:
        batch_op.add_column(sa.Column('votes_count', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.alter_column('option_text',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=200),
               existing_nullable=False)

    with op.batch_alter_table('vote', schema=None) as batch_op:
        batch_op.add_column(sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.alter_column('created_by',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('minimum_approval')
        batch_op.drop_column('vote_type')
        batch_op.drop_column('closes_at')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.alter_column('phone_number',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=15),
               existing_nullable=False)

    with op.batch_alter_table('goal', schema=None) as batch_op:
        batch_op.add_column(sa.Column('current_amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('target_date', sa.DATE(), autoincrement=False, nullable=True))

    with op.batch_alter_table('expense', schema=None) as batch_op:
        batch_op.add_column(sa.Column('approved_by', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('category', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
        batch_op.create_foreign_key(batch_op.f('expense_approved_by_fkey'), 'user', ['approved_by'], ['id'])
        batch_op.alter_column('description',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=200),
               nullable=False)
        batch_op.drop_column('title')

    with op.batch_alter_table('contribution', schema=None) as batch_op:
        batch_op.alter_column('transaction_ref',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
        batch_op.alter_column('payment_method',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)

    with op.batch_alter_table('chama', schema=None) as batch_op:
        batch_op.alter_column('contribution_frequency',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('join_code',
               existing_type=sa.String(length=10),
               type_=sa.VARCHAR(length=8),
               existing_nullable=False)

    # ### end Alembic commands ###
